My Emacs Configuration File

* Prelude
   #+begin_src emacs-lisp
     (setq prelude-guru nil)
   #+end_src

* Packages
   #+begin_src emacs-lisp
     (add-to-list 'load-path "~/.emacs.d/personal/lib/")
     (prelude-require-packages '(ac-nrepl
                                 auto-complete
                                 cyberpunk-theme
                                 elfeed
                                 jabber
                                 pretty-mode
                                 twittering-mode
                                 auto-complete
                                 rvm))
   #+end_src

* Utils

** Smex

   Smex allows you to use ido-mode with M-x.

   #+begin_src emacs-lisp
     (prelude-require-package 'smex)

     (smex-initialize)

     (global-set-key (kbd "M-x") 'smex)
     (global-set-key (kbd "M-X") 'smex-major-mode-commands)
   #+end_src

* Personal Information

  #+begin_src emacs-lisp
    (setq user-full-name "Michael Simpson")
    (setq user-mail-address "mjs2600@gmail.com")
    (setq auth-sources '("~/.authinfo.gpg"))
    (setq password-file "~/.passwords.gpg")
    (and (file-exists-p password-file) (load-file password-file))
  #+end_src

* Social
** RSS
   #+begin_src emacs-lisp
     (setq elfeed-feeds
           '("http://feeds.boingboing.net/boingboing/iBag"
             ;"http://www.stallman.org/rss/rss.xml"
             "http://xkcd.com/rss.xml"
             "http://feeds.feedburner.com/Lessig?format=xmlford.edu/lessig/blog/index.rdf"
             "https://www.eff.org/rss/updates.xml"
             "http://planet.emacsen.org/atom.xml"
             "http://blog.fogus.me/tag/readevalprintlove/feed/"))
   #+end_src

** Jabber
   IM settings for gmail
   #+begin_src emacs-lisp
     ;(require 'jabber)

     (setq jabber-account-list
           '(("mjs2600@gmail.com"
              (:network-server . "talk.google.com")
              (:connection-type . ssl))
             ("mike.simpson@scimedsolutions.com"
              (:network-server . "talk.google.com")
              (:connection-type . ssl))))

     (setq jabber-auto-reconnect nil)
     (setq jabber-vcard-avatars-retrieve nil)
     (setq jabber-mode-line-mode t)
     (setq jabber-show-offline-contacts nil)
   #+end_src

** ERC

** Twitter
   #+begin_src emacs-lisp
     ;(require 'twittering-mode)
   #+end_src

* Media
  #+begin_src emacs-lisp
    (setq pianobar-username "xodis2600@gmail.com")
    (load-library "pianobar")
    (require 'pianobar)
  #+end_src

* Style
  This section is for things like font size and color theme settings.
  #+begin_src emacs-lisp
    ;;(load-theme 'cyberpunk t)
    (global-auto-revert-mode t)
    (require 'pretty-mode)
    (global-pretty-mode t)
    (ido-mode t)
    (set-face-attribute 'default nil :height 140)

    (setq tab-width 2)
  #+end_src
* eShell
  #+begin_src emacs-lisp

    (setq eshell-cmpl-ignore-case t)
    (defadvice ansi-term (after advise-ansi-term-coding-system)
      (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix))
    (ad-activate 'ansi-term)

  #+end_src
* Programming
** Documentation

   This function will use the appropriate external documentation tool
   regardless of OS.

   #+begin_src emacs-lisp
     (prelude-require-packages '(dash-at-point
                                 zeal-at-point))

     (defun doc-at-point ()
       "An OS agnostic external documentation lookup function."
       (interactive)
       (if (eq system-type 'darwin)
           (dash-at-point)
         (zeal-at-point)))
   #+end_src
** Lisp
  #+begin_src emacs-lisp
    (prelude-require-package 'rainbow-delimiters)
    (defun general-lisp-mode-hooks ()
      (rainbow-delimiters-mode-enable)
      (smartparens-mode t))
    (add-hook 'lisp-mode-hook 'general-lisp-mode-hooks)
    (add-hook 'emacs-lisp-mode-hook 'general-lisp-mode-hooks)
    (add-hook 'geiser-repl-mode-hook 'general-lisp-mode-hooks)
    (add-hook 'scheme-mode-hook 'general-lisp-mode-hooks)
    (add-hook 'ielm-mode-hook 'general-lisp-mode-hooks)

  #+end_src

*** Scheme
  #+begin_src emacs-lisp
    (prelude-require-package 'geiser)
  #+end_src
